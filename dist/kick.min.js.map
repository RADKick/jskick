{"version":3,"file":"kick.min.js","sources":["../src/constants.js","../src/parsers.js","../src/observer.js","../src/kick.js","../src/bindings.js","../src/view.js","../src/adapter.js","../src/binders.js","../src/export.js"],"sourcesContent":["export const OPTIONS = [\n  //'prefix',\n  'templateDelimiters',\n  'rootInterface',\n  'preloadData',\n  'handler'\n]\n\nexport const EXTENSIONS = [\n  'binders',\n  'formatters',\n  'components',\n  'adapters'\n]","const PRIMITIVE = 0;\nconst KEYPATH = 1;\nconst TEXT = 0;\nconst BINDING = 1;\n\nconst QUOTED_STR = /^'.*'$|^\".*\"$/;\nconst WHITESPACES = ' \\n\\r\\t'.split('');\n\n// Parser and tokenizer for getting the type and value from a string.\nexport function parseType(string) {\n  let type = PRIMITIVE;\n  let value = string;\n\n  if (QUOTED_STR.test(string)) {\n    value = string.slice(1, -1);\n  } else if (string === \"true\") {\n    value = true;\n  } else if (string === \"false\") {\n    value = false;\n  } else if (string === \"null\") {\n    value = null;\n  } else if (string === \"undefined\") {\n    value = undefined;\n  } else if (!isNaN(string)) {\n    value = Number(string);\n  } else {\n    type = KEYPATH;\n  }\n\n  return { type: type, value: value };\n}\n\n// Template parser and tokenizer for mustache-style text content bindings.\n// Parses the template and returns a set of tokens, separating static portions\n// of text from binding declarations.\nexport function parseTemplate(template, delimiters) {\n  var tokens;\n  let length = template.length;\n  let index = 0;\n  let lastIndex = 0;\n  let open = delimiters[0],\n    close = delimiters[1];\n\n  while (lastIndex < length) {\n    index = template.indexOf(open, lastIndex);\n\n    if (index < 0) {\n      if (tokens) {\n        tokens.push({\n          type: TEXT,\n          value: template.slice(lastIndex)\n        });\n      }\n\n      break;\n    } else {\n      tokens || (tokens = []);\n      if (index > 0 && lastIndex < index) {\n        tokens.push({\n          type: TEXT,\n          value: template.slice(lastIndex, index)\n        });\n      }\n\n      lastIndex = index + open.length;\n      index = template.indexOf(close, lastIndex);\n\n      if (index < 0) {\n        let substring = template.slice(lastIndex - close.length);\n        let lastToken = tokens[tokens.length - 1];\n\n        if (lastToken && lastToken.type === TEXT) {\n          lastToken.value += substring;\n        } else {\n          tokens.push({\n            type: TEXT,\n            value: substring\n          });\n        }\n\n        break;\n      }\n\n      let value = template.slice(lastIndex, index).trim();\n\n      tokens.push({\n        type: BINDING,\n        value: value\n      });\n\n      lastIndex = index + close.length;\n    }\n  }\n\n  return tokens;\n}\n\nexport function parseFnExpr(expr) {\n  function jsNested(statement) {\n    var regex = new RegExp(\"([a-zA-Z0-9_$]+)\\\\((.*)\\\\)\", \"g\");\n    var root = { _: [] };\n\n    if (QUOTED_STR.test(statement)) {\n      root._.push({ k: statement, t: \"l\" });\n      return root;\n    }\n\n    var r = regex.exec(statement);\n    if (!r || r.length < 3) {\n      return root;\n    }\n    var parameters = args(r[2]);\n    var node = { _: [] };\n    parameters.forEach(function(p) {\n      if (p.e) {\n        if (p.e.indexOf(\"(\") == -1) {\n          node._.push({ k: p.e, t: \"p\" });\n        } else {\n          var wrappedNode = jsNested(p.e),\n            k;\n          for (k in wrappedNode) {\n            node._.push(wrappedNode[k][0]);\n          }\n        }\n      } else {\n        //node[p.s] = p.s;\n      }\n    });\n\n    // Assign node to the node's identifier\n    root._.push({ k: r[1], t: 'f', _: node._ });\n    //root._.push(r[1]:node);\n    return root;\n  }\n\n  function args(statement) {\n    statement += \",\"; // so I don't have to handle the \"last, leftover parameter\"\n    var results = [];\n    var chars = statement.split(\"\");\n    var level = 0; // levels of parenthesis, used to track how deep I am in ().\n    var index = 0; // determines which parameter am I currently on.\n    var temp = \"\", match = '', temp2 = '';\n    chars.forEach(function(char) {\n      switch (true) {\n        case char === \"'\":\n        case char === '\"':\n          if (match.length && match === char) {\n            temp += match + temp2 + match;\n            results[index] = { s: temp2 };\n            match = temp2 = '';\n            //level--;\n            //temp = '';\n            index++;\n          } else {\n            match = char;\n            //level++;\n          }\n          //level++;\n          break;\n        case !match.length && WHITESPACES.indexOf(char) !== -1:\n          break;\n        case !match.length && char === '(':\n          temp += char;\n          level++;\n          break;\n        case !match.length && char === ')':\n          temp += char;\n          level--;\n          break;\n        case !match.length && char === ',':\n          // if the comma is between a set of parenthesis, ignore.\n          if (level !== 0) {\n            temp += char;\n          }\n          // if the comma is external, split the string.\n          else {\n            results[index] = { e: temp };\n            temp = '';\n            index++;\n          }\n          break;\n        default:\n          if (match.length) {\n            temp2 += char;\n          } else {\n            temp += char;\n          }\n          break;\n      }\n    });\n    return results;\n  }\n\n  //return if we were able to parse functions otherwise it will be null\n  return jsNested(expr)._[0] || null;\n}\n","\n// Check if a value is an object than can be observed.\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj !== null\n}\n\n// Error thrower.\nfunction error(message) {\n  throw new Error('[Observer] ' + message)\n}\n\nvar adapters\nvar interfaces\nvar rootInterface\n\n// Constructs a new keypath observer and kicks things off.\nfunction Observer(obj, keypath, callback) {\n  this.keypath = keypath\n  this.callback = callback\n  this.objectPath = []\n  this.parse()\n  this.obj = this.getRootObject(obj)\n\n  if (isObject(this.target = this.realize())) {\n    this.set(true, this.key, this.target, this.callback)\n  }\n}\n\nObserver.updateOptions = function(options) {\n  adapters = options.adapters\n  interfaces = Object.keys(adapters)\n  rootInterface = options.rootInterface\n}\n\n// Tokenizes the provided keypath string into interface + path tokens for the\n// observer to work with.\nObserver.tokenize = function(keypath, root) {\n  var tokens = []\n  var current = {i: root, path: ''}\n  var index, chr\n\n  for (index = 0; index < keypath.length; index++) {\n    chr = keypath.charAt(index)\n\n    if (!!~interfaces.indexOf(chr)) {\n      tokens.push(current)\n      current = {i: chr, path: ''}\n    } else {\n      current.path += chr\n    }\n  }\n\n  tokens.push(current)\n  return tokens\n}\n\n// Parses the keypath using the interfaces defined on the view. Sets variables\n// for the tokenized keypath as well as the end key.\nObserver.prototype.parse = function() {\n  var path, root\n\n  if (!interfaces.length) {\n    error('Must define at least one adapter interface.')\n  }\n\n  if (!!~interfaces.indexOf(this.keypath[0])) {\n    root = this.keypath[0]\n    path = this.keypath.substr(1)\n  } else {\n    root = rootInterface\n    path = this.keypath\n  }\n\n  this.tokens = Observer.tokenize(path, root)\n  this.key = this.tokens.pop()\n}\n\n// Realizes the full keypath, attaching observers for every key and correcting\n// old observers to any changed objects in the keypath.\nObserver.prototype.realize = function() {\n  var current = this.obj\n  var unreached = -1\n  var prev\n  var token\n\n  for (let index = 0; index < this.tokens.length; index++) {\n    token = this.tokens[index]\n    if (isObject(current)) {\n      if (typeof this.objectPath[index] !== 'undefined') {\n        if (current !== (prev = this.objectPath[index])) {\n          this.set(false, token, prev, this)\n          this.set(true, token, current, this)\n          this.objectPath[index] = current\n        }\n      } else {\n        this.set(true, token, current, this)\n        this.objectPath[index] = current\n      }\n\n      current = this.get(token, current)\n    } else {\n      if (unreached === -1) {\n        unreached = index\n      }\n\n      if (prev = this.objectPath[index]) {\n        this.set(false, token, prev, this)\n      }\n    }\n  }\n\n  if (unreached !== -1) {\n    this.objectPath.splice(unreached)\n  }\n\n  return current\n}\n\n// Updates the keypath. This is called when any intermediary key is changed.\nObserver.prototype.sync = function() {\n  var next, oldValue, newValue\n\n  if ((next = this.realize()) !== this.target) {\n    if (isObject(this.target)) {\n      this.set(false, this.key, this.target, this.callback)\n    }\n\n    if (isObject(next)) {\n      this.set(true, this.key, next, this.callback)\n    }\n\n    oldValue = this.value()\n    this.target = next\n    newValue = this.value()\n    if (newValue !== oldValue || newValue instanceof Function) this.callback.sync()\n  } else if (next instanceof Array) {\n    this.callback.sync()\n  }\n}\n\n// Reads the current end value of the observed keypath. Returns undefined if\n// the full keypath is unreachable.\nObserver.prototype.value = function() {\n  if (isObject(this.target)) {\n    return this.get(this.key, this.target)\n  }\n}\n\n// Sets the current end value of the observed keypath. Calling setValue when\n// the full keypath is unreachable is a no-op.\nObserver.prototype.setValue = function(value) {\n  if (isObject(this.target)) {\n    adapters[this.key.i].set(this.target, this.key.path, value)\n  }\n}\n\n// Gets the provided key on an object.\nObserver.prototype.get = function(key, obj) {\n  return adapters[key.i].get(obj, key.path)\n}\n\n// Observes or unobserves a callback on the object using the provided key.\nObserver.prototype.set = function(active, key, obj, callback) {\n  var action = active ? 'observe' : 'unobserve'\n  adapters[key.i][action](obj, key.path, callback)\n}\n\n\n// Unobserves the entire keypath.\nObserver.prototype.unobserve = function() {\n  var obj\n  var token\n\n  for (let index = 0; index < this.tokens.length; index++) {\n    token = this.tokens[index]\n    if (obj = this.objectPath[index]) {\n      this.set(false, token, obj, this)\n    }\n  }\n\n  if (isObject(this.target)) {\n    this.set(false, this.key, this.target, this.callback)\n  }\n}\n// traverse the scope chain to find the scope which has the root property\n// if the property is not found in chain, returns the root scope\nObserver.prototype.getRootObject = function (obj) {\n  var rootProp, current;\n  if (!obj.$parent) {\n    return obj;\n  }\n\n  if (this.tokens.length) {\n    rootProp = this.tokens[0].path\n  } else {\n    rootProp = this.key.path\n  }\n\n  current = obj;\n  while (current.$parent && (current[rootProp] === undefined)) {\n    current = current.$parent\n  }\n\n  return current;\n}\n\nexport default Observer\n","import {EXTENSIONS} from './constants'\nimport {parseTemplate, parseType} from './parsers'\n\nconst kick = {\n  // Global binders.\n  binders: {},\n\n  // Global formatters.\n  formatters: {},\n\n  // Global components.\n  components: {},\n\n  // Global sightglass adapters.\n  adapters: {},\n\n  /*\n  // Default attribute prefix.\n  _prefix: 'rv',\n\n  _fullPrefix: 'rv-',\n\n  /* get prefix () {\n    return this._prefix\n  },\n\n  set prefix (value) {\n    this._prefix = value\n    this._fullPrefix = value + '-'\n  }, */\n\n  parseTemplate: parseTemplate,\n\n  parseType: parseType,\n\n  // Default template delimiters.\n  templateDelimiters: ['{{', '}}'],\n\n  // Binder shortcuts - extend it if you want to have your own\n  // else if(nodeName === '?') {nodeName = 'if';}\n\n  binderMap: {\n    '^': '^click',\n    '^^': '^dblclick',\n    '^_': '^contextmenu',\n    '^@': '^change',\n    '^+': '^focus',\n    '^-': '^blur',\n    '@': '@value',\n    '@x': '@checked',\n    ':' : ':text',\n    '::' : ':html',\n    '$' : ':html',\n    '+': ':show',\n    '-': ':hide',\n    '~': ':disabled',\n    '~~': ':enabled'\n    },\n    // was starBinder in rivetsjs, in kickjs *(star) is used for binding so changing it to varBinder as an variable binder\n    varBinderMap: {\n      '.&': ':class-&',\n      '..&': ':style-&',\n      '::&': ':attr-&',\n    },\n  // Default sightglass root interface.\n  rootInterface: '.',\n\n  // Preload data by default.\n  preloadData: true,\n\n  // Default event handler.\n  handler: function(context, ev, binding) {\n    //changing the order of returns as well as passed arguments first then $event\n    //todo document this breakig change\n    const processedArgs = binding.parseFormatterArguments(binding.fnArgs, 0);\n    this.call(context, ...[...processedArgs, binding.view.models, ev])\n  },\n\n  // Sets the attribute on the element. If no binder above is matched it will fall\n  // back to using this binder.\n  fallbackBinder: function(el, value) {\n    if (value != null) {\n      let type = this.type; \n      if(type.substr(0,1) === ':'){ type = type.substr(1); }\n      el.setAttribute(type, value)\n    } else {\n      el.removeAttribute(this.type)\n    }\n  },\n\n  // Merges an object literal into the corresponding global options.\n  configure: function(options) {\n    if (!options) {\n      return\n    }\n    Object.keys(options).forEach(option => {\n      let value = options[option]\n\n      if (EXTENSIONS.indexOf(option) > -1) {\n        Object.keys(value).forEach(key => {\n          this[option][key] = value[key]\n        })\n      } else {\n        this[option] = value\n      }\n    })\n  },\n\n  router:{}\n}\n\nexport default kick\n","import { parseType, parseFnExpr } from \"./parsers\";\nimport Observer from \"./observer\";\nimport kick from './kick';\n\nfunction getInputValue(el) {\n  let results = [];\n  if (el.type === \"checkbox\") {\n    return el.checked;\n  } else if (el.type === \"select-multiple\") {\n    el.options.forEach(option => {\n      if (option.selected) {\n        results.push(option.value);\n      }\n    });\n\n    return results;\n  } else {\n    return el.value;\n  }\n}\n\nconst FORMATTER_ARGS = /[^\\s']+|'([^']|'[^\\s])*'|\"([^\"]|\"[^\\s])*\"/g;\nconst FORMATTER_SPLIT = /\\s+/;\nconst FN_CHECK = /\\(.*\\)/;\n\n// A single binding between a model attribute and a DOM element.\nexport class Binding {\n  // All information about the binding is passed into the constructor; the\n  // containing view, the DOM node, the type of binding, the model object and the\n  // keypath at which to listen for changes.\n  constructor(view, el, type, keypath, binder, arg, formatters) {\n    this.view = view;\n    this.el = el;\n    this.type = type;\n    this.keypath = keypath;\n    this.binder = binder;\n    this.arg = arg;\n    this.formatters = formatters;\n    this.formatterObservers = {};\n    this.model = undefined;\n\n    //new property in kick for fn args but not sure if this is the right way\n    this.fnArgs = [];\n    //new property in kick for subscribers to get notified if value is changing specifically for jquery plugins\n    this.subscribers = [];\n    //new property in kick for locking to avoid loops of updates, specifically for jquery plugins\n    this.locked = false;\n    // add object to hold listners so that they can be unbinded later\n    this.listeners = {};\n  }\n\n  // Observes the object keypath\n  observe(obj, keypath) {\n    return new Observer(obj, keypath, this);\n  }\n\n  parseTarget() {\n    if (this.keypath) {\n      let token = parseType(this.keypath);\n\n      if (token.type === 0) {\n        this.value = token.value;\n      } else {\n        if (FN_CHECK.test(this.keypath)) {\n          let fnExpr = parseFnExpr(this.keypath);\n          if (fnExpr) {\n            this.keypath = fnExpr.k;\n            this.fnArgs = fnExpr._.map(x => x.k);\n            //let fnArgs = fnExpr._.map(x => x.k)\n            //this.fnArgs = this.parseFormatterArguments(fnArgs, 0)\n          }\n        }\n        this.observer = this.observe(this.view.models, this.keypath);\n        this.model = this.observer.target;\n      }\n    } else {\n      this.value = undefined;\n    }\n  }\n\n  parseFormatterArguments(args, formatterIndex) {\n    return args.map(parseType).map(({ type, value }, ai) => {\n      if (type === 0) {\n        return value;\n      } else {\n        if (!this.formatterObservers[formatterIndex]) {\n          this.formatterObservers[formatterIndex] = {};\n        }\n\n        let observer = this.formatterObservers[formatterIndex][ai];\n\n        if (!observer) {\n          observer = this.observe(this.view.models, value);\n          this.formatterObservers[formatterIndex][ai] = observer;\n        }\n\n        return observer.value();\n      }\n    });\n  }\n\n  // Applies all the current formatters to the supplied value and returns the\n  // formatted value.\n  formattedValue(value) {\n    return this.formatters.reduce((result, declaration, index) => {\n      let args = declaration.match(FORMATTER_ARGS);\n      let id = args.shift();\n      let formatter = this.view.options.formatters[id];\n\n      const processedArgs = this.parseFormatterArguments(args, index);\n\n      if (formatter && formatter.read instanceof Function) {\n        result = formatter.read(result, ...processedArgs);\n      } else if (formatter instanceof Function) {\n        result = formatter(result, ...processedArgs);\n      }\n      return result;\n    }, value);\n  }\n\n  // Returns an event handler for the binding around the supplied function.\n  eventHandler(fn) {\n    let binding = this;\n    let handler = binding.view.options.handler;\n\n    return function(ev) {\n      handler.call(fn, this, ev, binding);\n    };\n  }\n\n  // Sets the value for the binding. This Basically just runs the binding routine\n  // with the supplied value formatted.\n  set(value) {\n    if (value instanceof Function && !this.binder.function) {\n      //todo update docs, probably a breaking change\n      const processedArgs = this.parseFormatterArguments(this.fnArgs, 0);\n      value = this.formattedValue(\n        value.call(this.model, ...[...processedArgs, this.view.models])\n      );\n      //value = this.formattedValue(value.call(this.model))\n    } else {\n      value = this.formattedValue(value);\n    }\n\n    let routineFn = this.binder.routine || this.binder;\n\n    if (routineFn instanceof Function) {\n      routineFn.call(this, this.el, value);\n      this.callSubscribers(value);\n    }\n  }\n\n  // Syncs up the view binding with the model.\n  sync() {\n    if (this.observer) {\n      this.model = this.observer.target;\n      this.set(this.observer.value());\n    } else {\n      this.set(this.value);\n    }\n  }\n\n  // Publishes the value currently set on the input element back to the model.\n  publish() {\n    if (this.observer) {\n      var value = this.formatters.reduceRight((result, declaration, index) => {\n        const args = declaration.split(FORMATTER_SPLIT);\n        const id = args.shift();\n        const formatter = this.view.options.formatters[id];\n        const processedArgs = this.parseFormatterArguments(args, index);\n\n        if (formatter && formatter.publish) {\n          result = formatter.publish(result, ...processedArgs);\n        }\n        return result;\n      }, this.getValue(this.el));\n\n      this.observer.setValue(value);\n    }\n  }\n\n  // Subscribes to the model for changes at the specified keypath. Bi-directional\n  // routines will also listen for changes on the element to propagate them back\n  // to the model.\n  bind() {\n    this.parseTarget();\n\n    if (this.binder.hasOwnProperty(\"bind\")) {\n      this.binder.bind.call(this, this.el);\n    }\n\n    if (this.view.options.preloadData) {\n      this.sync();\n    }\n  }\n\n  // Unsubscribes from the model and the element.\n  unbind() {\n    if (this.binder.unbind) {\n      this.binder.unbind.call(this, this.el);\n    }\n\n    if (this.observer) {\n      this.observer.unobserve();\n    }\n\n    Object.keys(this.formatterObservers).forEach(fi => {\n      let args = this.formatterObservers[fi];\n\n      Object.keys(args).forEach(ai => {\n        args[ai].unobserve();\n      });\n    });\n\n    this.formatterObservers = {};\n  }\n\n  // Updates the binding's model from what is currently set on the view. Unbinds\n  // the old model first and then re-binds with the new model.\n  update(models = {}) {\n    if (this.observer) {\n      this.model = this.observer.target;\n    }\n\n    if (this.binder.update) {\n      this.binder.update.call(this, models);\n    }\n  }\n\n  // Returns elements value\n  getValue(el) {\n    if (this.binder && this.binder.getValue) {\n      return this.binder.getValue.call(this, el);\n    } else {\n      return getInputValue(el);\n    }\n  }\n\n  // Subscribe to the value changes\n  subscribe(listener) {\n    var index = this.subscribers.push(listener) -1;\n\n    // Provide handle back for removal of listener\n    return {\n      remove: function() {\n        delete this.subscribers[index];\n      }\n    };\n  }\n\n  // Call the subscribers\n  callSubscribers(value){\n      // Cycle through subscribers queue, fire!\n      this.subscribers.forEach(function(item) {\n        item(value);\n    });      \n  }\n\n  // lock if not locked and returns false if already locked\n  lock(locking){\n    // return locked state if none provided\n    if(locking === undefined) {\n      return this.locked;\n    }  else if(this.locked === true && locking === true) {\n      // already locked asking again for same lock state\n      return false;\n    }\n\n    return this.locked = locking;\n  }\n\n  // Returns the next of kin bindings on the same element\n  kins(){\n    return this.view.bindings.filter((x)=> {return x.el === this.el});\n  }\n  // Returns the binding of a given type on the same element\n  kin(type){\n    let mappedType = kick.binderMap[type] || type;\n\n    return this.kins().find((x)=> {return x.type === mappedType;});\n  }\n}\n","import kick from './kick'\nimport {Binding} from './bindings'\nimport {parseTemplate} from './parsers'\n//import ComponentBinding from './components'\n\nconst textBinder = {\n  routine: (node, value) => {\n    node.data = (value != null) ? value : ''\n  }\n}\n\nconst DECLARATION_SPLIT = /((?:'[^']*')*(?:(?:[^\\|']*(?:'[^']*')+[^\\|']*)+|[^\\|]+))|^$/g\nconst ESCAPE_BINDER = /[.*+?^${}()|[\\]\\\\]/g\nconst ESCAPE_BINDER_WITH = '\\\\$&'\nconst binderPrefixes = '@:^.-+?!*#$~'.split('')\n\n\nconst parseNode = (view, node) => {\n  let block = false\n\n  if (node.nodeType === 3) {\n    let tokens = parseTemplate(node.data, kick.templateDelimiters)\n\n    if (tokens) {\n      for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i]\n        let text = document.createTextNode(token.value)\n        node.parentNode.insertBefore(text, node)\n\n        if (token.type === 1) {\n          view.buildBinding(text, null, token.value, textBinder, null)\n        }\n      }\n\n      node.parentNode.removeChild(node)\n    }\n    block = true\n  } else if (node.nodeType === 1) {\n    block = view.traverse(node)\n  }\n\n  if (!block) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n      parseNode(view, node.childNodes[i]);\n    }\n  }\n}\n\nconst bindingComparator = (a, b) => {\n  let aPriority = a.binder ? (a.binder.priority || 0) : 0\n  let bPriority = b.binder ? (b.binder.priority || 0) : 0\n  return bPriority - aPriority\n}\n\nconst trimStr = (str) => {\n  return str.trim()\n}\n\n// A collection of bindings built from a set of parent nodes.\nexport default class View {\n  // The DOM elements and the model objects for binding are passed into the\n  // constructor along with any local options that should be used throughout the\n  // context of the view and it's bindings.\n  constructor(els, models, options) {\n    if (els.jquery || els instanceof Array) {\n      this.els = els\n    } else {\n      this.els = [els]\n    }\n\n    this.models = models\n    this.options = options\n\n    this.build()\n  }\n\n\n  buildBinding(node, type, declaration, binder, arg) {\n    let pipes = declaration.match(DECLARATION_SPLIT).map(trimStr)\n\n    let keypath = pipes.shift()\n\n    if(arg === '' && type === '*'){\n      //resolve for in expression, useful for case sensitive members e.g. myItem in items\n      const forRE = new RegExp(/^(.+)\\s+in\\s+(.[^|\\s]+)(.*)$/gm);\n      let forExp = forRE.exec(keypath);\n      // console.log(forExp)\n      if(forExp && forExp.length > 2){\n        arg = forExp[1] || arg\n        keypath = forExp[2] || keypath\n      }\n      // console.log(forExp[3].split('|'))\n    }\n\n    this.bindings.push(new Binding(this, node, type, keypath, binder, arg, pipes))\n  }\n\n  // Parses the DOM tree and builds `Binding` instances for every matched\n  // binding declaration.\n  build() {\n    this.bindings = []\n\n    let elements = this.els, i, len;\n    for (i = 0, len = elements.length; i < len; i++) {\n      parseNode(this, elements[i])\n    }\n\n    this.bindings.sort(bindingComparator)\n  }\n\n  traverse(node) {\n    // let bindingPrefix = kick._fullPrefix\n    let block = node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE'\n    let attributes = node.attributes\n    let bindInfos = []\n    let varBinders = this.options.varBinders\n    let mappedBinder\n    var binderType, binder, identifier, arg\n\n    for (let i = 0, len = attributes.length; i < len; i++) {\n      let attribute = attributes[i]\n      // if (attribute.name.indexOf(bindingPrefix) === 0) {\n      if (this.startWithBinder(attribute.name)) {\n          // binderType = attribute.name.slice(bindingPrefix.length);\n          mappedBinder = kick.binderMap[attribute.name];\n          binderType = mappedBinder || attribute.name;\n\n        // type = attribute.name.slice(bindingPrefix.length)\n        binder = this.options.binders[binderType]\n        arg = undefined\n\n        if (!binder) {\n          for (let k = 0; k < varBinders.length; k++) {\n            identifier = varBinders[k]\n            if (binderType.slice(0, identifier.length - 1) === identifier.slice(0, -1)) {\n              binder = this.options.binders[identifier]\n              arg = binderType.slice(identifier.length - 1)\n              break\n            }\n          }\n        }\n\n        if (!binder) {\n          binder = kick.fallbackBinder\n        }\n\n        if (binder.block) {\n          this.buildBinding(node, binderType, attribute.value, binder, arg)\n          node.removeAttribute(attribute.name)\n          return true;\n        }\n\n        bindInfos.push({attr: attribute, binder: binder, type: binderType, arg: arg})\n      }\n    }\n\n    for (let i = 0; i < bindInfos.length; i++) {\n      let bindInfo = bindInfos[i]\n      this.buildBinding(node, bindInfo.type, bindInfo.attr.value, bindInfo.binder, bindInfo.arg)\n      node.removeAttribute(bindInfo.attr.name)\n    }\n\n    if (kick.components[binderType] && !node._bound) {\n       this.bindings.push(new ComponentBinding(this, node, binderType));\n       block = true;\n    }\n\n    return block\n  }\n\n  // Binds all of the current bindings for this view.\n  bind() {\n    this.bindings.forEach(binding => {\n      binding.bind()\n    })\n  }\n\n  // Unbinds all of the current bindings for this view.\n  unbind() {\n    this.bindings.forEach(binding => {\n      binding.unbind()\n    })\n  }\n\n  // Syncs up the view with the model by running the routines on all bindings.\n  sync() {\n    this.bindings.forEach(binding => {\n      binding.sync()\n    })\n  }\n\n  // Publishes the input values from the view back to the model (reverse sync).\n  publish() {\n    this.bindings.forEach(binding => {\n      if (binding.binder && binding.binder.publishes) {\n        binding.publish()\n      }\n    })\n  }\n\n  // Updates the view's models along with any affected bindings.\n  update(models = {}) {\n    Object.keys(models).forEach(key => {\n      this.models[key] = models[key]\n    })\n\n    this.bindings.forEach(binding => {\n      if (binding.update) {\n        binding.update(models)\n      }\n    })\n  }\n\n  // move it to utils\n  startWithBinder(name) {\n    const prefix = name.substr(0, 1)\n    return binderPrefixes.some((pre) => pre === prefix)\n  }\n}\n","// The default `.` adapter that comes with kick.js. Allows subscribing to\n// properties on plain objects, implemented in ES5 natives using\n// `Object.defineProperty`.\n\nconst ARRAY_METHODS = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'sort',\n  'reverse',\n  'splice'\n]\n\nconst adapter = {\n  counter: 0,\n  weakmap: {},\n\n  weakReference: function(obj) {\n    if (!obj.hasOwnProperty('__rv')) {\n      let id = this.counter++\n\n      Object.defineProperty(obj, '__rv', {\n        value: id\n      })\n    }\n\n    if (!this.weakmap[obj.__rv]) {\n      this.weakmap[obj.__rv] = {\n        callbacks: {}\n      }\n    }\n\n    return this.weakmap[obj.__rv]\n  },\n\n  cleanupWeakReference: function(ref, id) {\n    if (!Object.keys(ref.callbacks).length) {\n      if (!(ref.pointers && Object.keys(ref.pointers).length)) {\n        delete this.weakmap[id]\n      }\n    }\n  },\n\n  stubFunction: function(obj, fn) {\n    let original = obj[fn]\n    let map = this.weakReference(obj)\n    let weakmap = this.weakmap\n\n    obj[fn] = (...args) => {\n      let response = original.apply(obj, args)\n\n      Object.keys(map.pointers).forEach(r => {\n        let k = map.pointers[r]\n\n        if (weakmap[r]) {\n          if (weakmap[r].callbacks[k] instanceof Array) {\n            weakmap[r].callbacks[k].forEach(callback => {\n              callback.sync()\n            })\n          }\n        }\n      })\n\n      return response\n    }\n  },\n\n  observeMutations: function(obj, ref, keypath) {\n    if (obj instanceof Array) {\n      let map = this.weakReference(obj)\n\n      if (!map.pointers) {\n        map.pointers = {}\n\n        ARRAY_METHODS.forEach(fn => {\n          this.stubFunction(obj, fn)\n        })\n      }\n\n      if (!map.pointers[ref]) {\n        map.pointers[ref] = []\n      }\n\n      if (map.pointers[ref].indexOf(keypath) === -1) {\n        map.pointers[ref].push(keypath)\n      }\n    }\n  },\n\n  unobserveMutations: function(obj, ref, keypath) {\n    if ((obj instanceof Array) && (obj.__rv != null)) {\n      let map = this.weakmap[obj.__rv]\n\n      if (map) {\n        let pointers = map.pointers[ref]\n\n        if (pointers) {\n          let idx = pointers.indexOf(keypath)\n\n          if (idx > -1) {\n            pointers.splice(idx, 1)\n          }\n\n          if (!pointers.length) {\n            delete map.pointers[ref]\n          }\n\n          this.cleanupWeakReference(map, obj.__rv)\n        }\n      }\n    }\n  },\n\n  observe: function(obj, keypath, callback) {\n    var value;\n    let callbacks = this.weakReference(obj).callbacks\n\n    if (!callbacks[keypath]) {\n      callbacks[keypath] = []\n      let desc = Object.getOwnPropertyDescriptor(obj, keypath)\n\n      if (!desc || !(desc.get || desc.set || !desc.configurable)) {\n        value = obj[keypath]\n\n        Object.defineProperty(obj, keypath, {\n          enumerable: true,\n\n          get: () => {\n            return value\n          },\n\n          set: newValue => {\n            if (newValue !== value) {\n              this.unobserveMutations(value, obj.__rv, keypath)\n              value = newValue\n              let map = this.weakmap[obj.__rv]\n\n              if (map) {\n                let callbacks = map.callbacks[keypath]\n\n                if (callbacks) {\n                  callbacks.forEach(cb => {\n                      cb.sync()\n                  })\n                }\n\n                this.observeMutations(newValue, obj.__rv, keypath)\n              }\n            }\n          }\n        })\n      }\n    }\n\n    if (callbacks[keypath].indexOf(callback) === -1) {\n      callbacks[keypath].push(callback)\n    }\n\n    this.observeMutations(obj[keypath], obj.__rv, keypath)\n  },\n\n  unobserve: function(obj, keypath, callback) {\n    let map = this.weakmap[obj.__rv]\n\n    if (map) {\n      let callbacks = map.callbacks[keypath]\n\n      if (callbacks) {\n        let idx = callbacks.indexOf(callback)\n\n        if (idx > -1) {\n          callbacks.splice(idx, 1)\n\n          if (!callbacks.length) {\n            delete map.callbacks[keypath]\n            this.unobserveMutations(obj[keypath], obj.__rv, keypath)\n          }\n        }\n\n        this.cleanupWeakReference(map, obj.__rv)\n      }\n    }\n  },\n\n  get: function(obj, keypath) {\n    return obj[keypath]\n  },\n\n  set: (obj, keypath, value) => {\n    obj[keypath] = value\n  }\n}\n\nexport default adapter\n","import View from './view'\nimport kick from './kick';\n\nconst getString = (value) => {\n  return value != null ? value.toString() : undefined\n}\n\nconst times = (n, cb) => {\n  for (let i = 0; i < n; i++) cb()\n}\n\nfunction createView(binding, data, anchorEl) {\n  let template = binding.el.cloneNode(true)\n  let view = new View(template, data, binding.view.options)\n  view.bind()\n  binding.marker.parentNode.insertBefore(template, anchorEl)\n  return view\n}\n\nconst binders = {\n  // Binds an event handler on the element.\n  '^&': {\n    function: true,\n    priority: 1000,\n\n    unbind: function(el) {\n      if (this.handler) {\n        el.removeEventListener(this.arg, this.handler)\n      }\n    },\n\n    routine: function(el, value) {\n      if (this.handler) {\n        el.removeEventListener(this.arg, this.handler)\n      }\n\n      this.handler = this.eventHandler(value)\n      el.addEventListener(this.arg, this.handler)\n    }\n  },\n\n  // for $item Appends bound instances of the element in place for item in the array.\n  '*&': {\n    block: true,\n\n    priority: 4000,\n\n    bind: function(el) {\n      if (!this.marker) {\n        this.marker = document.createComment(` kick: ${this.type} `)\n        this.iterated = []\n\n        el.parentNode.insertBefore(this.marker, el)\n        el.parentNode.removeChild(el)\n      } else {\n        this.iterated.forEach(view => {\n          view.bind()\n        })\n      }\n    },\n\n    unbind: function(el) {\n      if (this.iterated) {\n        this.iterated.forEach(view => {\n          view.unbind()\n        })\n      }\n    },\n\n    routine: function(el, collection) {\n      let modelName = this.arg || '$item'\n      collection = collection || []\n      let indexProp = el.getAttribute('#index') || el.getAttribute('index-property') || '$index'\n\n      collection.forEach((model, index) => {\n        let data = {$parent: this.view.models}\n        data[indexProp] = index\n        data[modelName] = model\n        let view = this.iterated[index]\n\n        if (!view) {\n\n          let previous = this.marker\n\n          if (this.iterated.length) {\n            previous = this.iterated[this.iterated.length - 1].els[0]\n          }\n\n          view = createView(this, data, previous.nextSibling)\n          this.iterated.push(view)\n        } else {\n          if (view.models[modelName] !== model) {\n            // search for a view that matches the model\n            let matchIndex, nextView\n            for (let nextIndex = index + 1; nextIndex < this.iterated.length; nextIndex++) {\n              nextView = this.iterated[nextIndex]\n              if (nextView.models[modelName] === model) {\n                matchIndex = nextIndex\n                break\n              }\n            }\n            if (matchIndex !== undefined) {\n              // model is in other position\n              // todo: consider avoiding the splice here by setting a flag\n              // profile performance before implementing such change\n              this.iterated.splice(matchIndex, 1)\n              this.marker.parentNode.insertBefore(nextView.els[0], view.els[0])\n              nextView.models[indexProp] = index\n            } else {\n              //new model\n              nextView = createView(this, data, view.els[0])\n            }\n            this.iterated.splice(index, 0, nextView)\n          } else {\n            view.models[indexProp] = index\n          }\n        }\n      })\n\n      if (this.iterated.length > collection.length) {\n        times(this.iterated.length - collection.length, () => {\n          let view = this.iterated.pop()\n          view.unbind()\n          this.marker.parentNode.removeChild(view.els[0])\n        })\n      }\n\n      if (el.nodeName === 'OPTION') {\n        this.view.bindings.forEach(binding => {\n          if (binding.el === this.marker.parentNode && binding.type === 'value') {\n            binding.sync()\n          }\n        })\n      }\n    },\n\n    update: function(models) {\n      let data = {}\n\n      //todo: add test and fix if necessary\n      Object.keys(models).forEach(key => {\n        if (key !== this.arg) {\n          data[key] = models[key]\n        }\n      })\n\n      this.iterated.forEach(view => {\n        view.update(data)\n      })\n    }\n  },\n\n  // Order of ..& should be before .& otherwise match will trigger shorter length first\n  '..&': function(el, value) {\n    const propertyName = this.arg;\n    if (value) {\n      el.style[propertyName] = value;\n    } else {\n      el.style[propertyName] = '';\n    }\n  },\n\n  // Adds or removes the class from the element when value is true or false.\n  '.&': function(el, value) {\n    let elClass = ` ${el.className} `\n\n    if (!value === (elClass.indexOf(` ${this.arg} `) > -1)) {\n      if (value) {\n        el.className = `${el.className} ${this.arg}`\n      } else {\n        el.className = elClass.replace(` ${this.arg} `, ' ').trim()\n      }\n    }\n  },\n\n  // Sets the element's text value.\n  ':text': (el, value) => {\n    el.textContent = value != null ? value : ''\n  },\n\n  // Sets the element's HTML content.\n  ':html': (el, value) => {\n    el.innerHTML = value != null ? value : ''\n  },\n  \n  // Shows the element when value is true.\n  ':show': (el, value) => {\n    el.style.display = value ? '' : 'none'\n  },\n\n  // Hides the element when value is true (negated version of `show` binder).\n  ':hide': (el, value) => {\n    el.style.display = value ? 'none' : ''\n  },\n\n  // Enables the element when value is true.\n  ':enabled': (el, value) => {\n    el.disabled = !value\n  },\n\n  // Disables the element when value is true (negated version of `enabled` binder).\n  ':disabled': (el, value) => {\n    el.disabled = !!value\n  },\n\n  // Checks a checkbox or radio input when the value is true. Also sets the model\n  // property when the input is checked or unchecked (two-way binder).\n  '@checked': {\n    publishes: true,\n    priority: 2000,\n\n    bind: function(el) {\n      var self = this;\n      if (!this.callback) {\n        this.callback = function () {\n          self.publish();\n        }\n      }\n      el.addEventListener('change', this.callback)\n    },\n\n    unbind: function(el) {\n      el.removeEventListener('change', this.callback)\n    },\n\n    routine: function(el, value) {\n      if (el.type === 'radio') {\n        el.checked = getString(el.value) === getString(value)\n      } else {\n        el.checked = !!value\n      }\n    }\n  },\n\n  // Sets the element's value. Also sets the model property when the input changes\n  // (two-way binder).\n  '@value': {\n    publishes: true,\n    priority: 3000,\n\n    bind: function(el) {\n      this.isRadio = el.tagName === 'INPUT' && el.type === 'radio';\n      if (!this.isRadio) {\n        this.event = el.getAttribute('event-name') || (el.tagName === 'SELECT' ? 'change' : 'input')\n\n        var self = this;\n        if (!this.callback) {\n          this.callback = function () {\n            self.publish();\n          }\n        }\n\n        el.addEventListener(this.event, this.callback)\n      }\n    },\n\n    unbind: function(el) {\n      if (!this.isRadio) {\n        el.removeEventListener(this.event, this.callback)\n      }\n    },\n\n    routine: function(el, value) {\n      if (this.isRadio) {\n        el.setAttribute('value', value)\n      } else {\n        if (el.type === 'select-multiple') {\n          if (value instanceof Array) {\n            for (let i = 0; i < el.length; i++) {\n              let option = el[i];\n              option.selected = value.indexOf(option.value) > -1\n            }\n          }\n        } else if (getString(value) !== getString(el.value)) {\n          el.value = value != null ? value : ''\n        }\n      }\n    }\n  },\n\n  // Inserts and binds the element and it's child nodes into the DOM when true.\n  '?': {\n    block: true,\n    priority: 4000,\n\n    bind: function(el) {\n      if (!this.marker) {\n        this.marker = document.createComment(' kick: ' + this.type + ' ' + this.keypath + ' ');\n        this.attached = false\n\n        el.parentNode.insertBefore(this.marker, el)\n        el.parentNode.removeChild(el)\n      } else if (this.bound === false && this.nested) {\n        this.nested.bind()\n      }\n      this.bound = true\n    },\n\n    unbind: function() {\n      if (this.nested) {\n        this.nested.unbind()\n        this.bound = false\n      }\n    },\n\n    routine: function(el, value) {\n      if (!!value !== this.attached) {\n        if (value) {\n\n          if (!this.nested) {\n            this.nested = new View(el, this.view.models, this.view.options)\n            this.nested.bind()\n          }\n\n          this.marker.parentNode.insertBefore(el, this.marker.nextSibling)\n          this.attached = true\n        } else {\n          el.parentNode.removeChild(el)\n          this.attached = false\n        }\n      }\n    },\n\n    update: function(models) {\n      if (this.nested) {\n        this.nested.update(models)\n      }\n    }\n  },\n  '::&': function(el, value) {\n    if (value != null) {\n      el.setAttribute(this.arg, value)\n    } else {\n      el.removeAttribute(this.arg)\n    }\n  }  \n}\n\nexport default binders\n","import kick from './kick'\nimport View from './view'\nimport {OPTIONS, EXTENSIONS} from './constants'\nimport adapter from './adapter'\nimport binders from './binders'\nimport Observer from './observer'\n//import router from './router'\n//import components from './components'\n\n// Returns the public interface.\nkick.binders = binders\n//kick.components = components\nkick.adapters['.'] = adapter\n//kick.router = router\n\n// Binds some data to a template / element. Returns a kick.View instance.\nkick.bind = (elm, models, options) => {\n  // if element then return itself\n  elm = elm || '[kick-app]';\n  let el = (elm.nodeType && elm.nodeType > 0) ? elm : document.querySelector(elm);\n  // max 2 tries to add newly added elements, can't do recursive as included file might have multiple ements and outerHTML doesn't support this \n  kick.includeFile(el);\n  //kick.includeFile(el);\n\n  let viewOptions = {}\n  models = models || {}\n  options = options || {}\n\n  EXTENSIONS.forEach(extensionType => {\n    viewOptions[extensionType] = Object.create(null)\n\n    if (options[extensionType]) {\n      Object.keys(options[extensionType]).forEach(key => {\n        viewOptions[extensionType][key] = options[extensionType][key]\n      })\n    }\n\n    Object.keys(kick[extensionType]).forEach(key => {\n      if (!viewOptions[extensionType][key]) {\n        viewOptions[extensionType][key] = kick[extensionType][key]\n      }\n    })\n  })\n\n  OPTIONS.forEach(option => {\n    let value = options[option]\n    viewOptions[option] = value != null ? value : kick[option]\n  })\n\n  viewOptions.varBinders = Object.keys(viewOptions.binders).filter(function (key) {\n    return key.indexOf('&') > 0\n  })\n\n  Observer.updateOptions(viewOptions)\n\n  let view = new View(el, models, viewOptions)\n  view.bind()\n  return view\n}\n\n// Initializes a new instance of a component on the specified element and\n// returns a View instance.\nkick.init = (component, el, data = {}) => {\n  if (el == null) { el = document.createElement('div'); }\n  component = kick.components[component];\n  let template = component.template.call(kick, el);\n  if (template instanceof HTMLElement) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n    el.appendChild(template);\n  } else {\n    el.innerHTML = template;\n  }\n  const scope = component.initialize.call(kick, el, data);\n\n  let view = new View(el, scope)\n  view.bind()\n  return view\n}\n\n\nkick.formatters.negate = kick.formatters.not = (value) => {\n  return !value;\n};\n\nkick.formatters.call = (value, ...args) => {\n  if(!args.length) {return;}\n  let fn = args[0]\n  args = Array.prototype.slice.call(args, 1)\n  //value.call(...args)\n  return fn.call(value, ...args)\n  /* fix later if needs to be\n  return () => {\n      return fn.apply(null, value, ...args);\n  }\n  */\n}\n\nkick.loadFile = (el, file) => {\n  /* Make an HTTP request using the attribute value as the file name: */\n  try {\n    let xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function() {\n      if (this.readyState == 4) {\n        if (this.status == 200) {\n          /* Remove the attribute, and call this function once more: */\n          if(el.tagName === 'KICKER'){\n            // replace el with new html\n            el.outerHTML = this.responseText;\n            // not sure about the below yet \n            // kick.includeFile(el.parent);\n          } else {\n            el.removeAttribute(\":file\");\n            el.innerHTML = this.responseText;\n            kick.includeFile(el);\n          }\n        }\n        else if (this.status == 404) {el.innerHTML = '<!-- ' + this.responseURL + ' not found. -->';}\n        else {el.innerHTML = '<!-- ' + this.responseText + ' -->';}\n      }\n    } \n    xhttp.open(\"GET\", file, true);\n    xhttp.send();\n  } catch (e) {\n    el.innerHTML = '<!-- Unable to connect to server -->';\n  }\n}\n\n// Sets the element's HTML content from file.\nkick.includeFile = (el) => {\n  let z, i, elmnt, file;\n  /* Loop through a collection of all HTML elements: */\n  z = el.getElementsByTagName(\"*\");\n\n  for (i = 0; i < z.length; i++) {\n    elmnt = z[i];\n    /*search for elements with a certain atrribute:*/\n    file = elmnt.getAttribute(\":file\");\n    if (file) {\n      kick.loadFile(elmnt, file);\n    }\n  }\n}\n\nexport default kick\n"],"names":["OPTIONS","EXTENSIONS","QUOTED_STR","WHITESPACES","split","parseType","string","type","value","test","slice","undefined","isNaN","Number","parseTemplate","template","delimiters","tokens","length","index","lastIndex","open","close","indexOf","push","substring","lastToken","trim","parseFnExpr","expr","jsNested","statement","regex","RegExp","root","_","k","t","r","exec","results","chars","level","temp","match","temp2","parameters","forEach","char","s","e","node","p","wrappedNode","adapters","interfaces","rootInterface","kick","context","ev","binding","processedArgs","parseFormatterArguments","fnArgs","call","view","models","el","this","substr","setAttribute","removeAttribute","options","keys","option","key","isObject","obj","Observer","keypath","callback","objectPath","parse","getRootObject","target","realize","set","updateOptions","Object","tokenize","chr","current","i","path","charAt","prototype","message","Error","pop","prev","token","unreached","get","splice","sync","next","oldValue","newValue","Function","Array","setValue","active","action","unobserve","rootProp","$parent","FORMATTER_ARGS","FORMATTER_SPLIT","FN_CHECK","Binding","binder","arg","formatters","formatterObservers","model","subscribers","locked","listeners","observe","parseTarget","fnExpr","map","x","observer","args","formatterIndex","ai","_this","formattedValue","reduce","result","declaration","id","shift","formatter","_this2","read","eventHandler","fn","handler","function","routineFn","routine","callSubscribers","publish","reduceRight","_this3","getValue","bind","hasOwnProperty","preloadData","unbind","_this4","fi","update","checked","selected","subscribe","listener","item","lock","locking","kins","bindings","filter","_this5","kin","mappedType","binderMap","find","textBinder","data","DECLARATION_SPLIT","binderPrefixes","parseNode","block","nodeType","templateDelimiters","text","document","createTextNode","parentNode","insertBefore","buildBinding","removeChild","traverse","childNodes","bindingComparator","a","b","aPriority","priority","trimStr","str","View","els","jquery","build","pipes","forExp","len","elements","sort","binderType","identifier","nodeName","attributes","bindInfos","varBinders","attribute","startWithBinder","name","binders","fallbackBinder","attr","bindInfo","components","_bound","ComponentBinding","publishes","prefix","some","pre","ARRAY_METHODS","adapter","counter","defineProperty","weakmap","__rv","ref","callbacks","pointers","original","weakReference","response","apply","stubFunction","idx","cleanupWeakReference","desc","getOwnPropertyDescriptor","configurable","unobserveMutations","observeMutations","getString","toString","createView","anchorEl","cloneNode","marker","removeEventListener","addEventListener","iterated","createComment","collection","modelName","indexProp","getAttribute","matchIndex","nextView","nextIndex","previous","nextSibling","n","cb","propertyName","style","elClass","className","replace","textContent","innerHTML","display","disabled","self","isRadio","tagName","event","bound","nested","attached","elm","querySelector","includeFile","viewOptions","extensionType","create","init","component","createElement","HTMLElement","firstChild","appendChild","scope","initialize","negate","not","loadFile","file","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","outerHTML","responseText","responseURL","send","z","elmnt","getElementsByTagName"],"mappings":"gLAAO,IAAMA,EAAU,CAErB,qBACA,gBACA,cACA,WAGWC,EAAa,CACxB,UACA,aACA,aACA,YCPIC,EAAa,gBACbC,EAAc,UAAUC,MAAM,IAG7B,SAASC,EAAUC,OACpBC,EAVY,EAWZC,EAAQF,SAERJ,EAAWO,KAAKH,KACVA,EAAOI,MAAM,GAAI,GACL,SAAXJ,KACD,EACY,UAAXA,KACD,EACY,SAAXA,IACD,KACY,cAAXA,SACDK,EACEC,MAAMN,KAtBJ,IAuBJO,OAAOP,GAKV,CAAEC,KAAMA,EAAMC,MAAOA,GAMvB,SAASM,EAAcC,EAAUC,WAClCC,EACAC,EAASH,EAASG,OAClBC,EAAQ,EACRC,EAAY,EACZC,EAAOL,EAAW,GACpBM,EAAQN,EAAW,GAEdI,EAAYF,GAAQ,OACjBH,EAASQ,QAAQF,EAAMD,IAEnB,EAAG,CACTH,KACKO,KAAK,MA9CP,QAgDIT,EAASL,MAAMU,kBAMfH,EAAS,IACR,EAARE,GAAaC,EAAYD,KACpBK,KAAK,MAxDP,QA0DIT,EAASL,MAAMU,EAAWD,OAIzBA,EAAQE,EAAKH,UACjBH,EAASQ,QAAQD,EAAOF,IAEpB,EAAG,KACTK,EAAYV,EAASL,MAAMU,EAAYE,EAAMJ,QAC7CQ,EAAYT,EAAOA,EAAOC,OAAS,GAEnCQ,GArEC,IAqEYA,EAAUnB,OACfC,OAASiB,IAEZD,KAAK,MAxET,QA0EMC,cAOTjB,EAAQO,EAASL,MAAMU,EAAWD,GAAOQ,SAEtCH,KAAK,MAlFF,QAoFDhB,MAGGW,EAAQG,EAAMJ,cAIvBD,EAGF,SAASW,EAAYC,mBACjBC,EAASC,OACZC,EAAQ,IAAIC,OAAO,6BAA8B,KACjDC,EAAO,CAAEC,EAAG,OAEZjC,EAAWO,KAAKsB,YACbI,EAAEX,KAAK,CAAEY,EAAGL,EAAWM,EAAG,MACxBH,MAGLI,EAAIN,EAAMO,KAAKR,OACdO,GAAKA,EAAEpB,OAAS,SACZgB,MA0BGH,EAERS,EACAC,EACAC,EACAvB,EACAwB,EAAWC,EAAYC,EA9BvBC,GAwBQf,EAxBUO,EAAE,GA0BpBE,EAAU,GACVC,MAFS,KAESrC,MAAM,IAExBe,EADAuB,EAAQ,EAEeG,EAAZD,EAAXD,EAAO,KACLI,QAAQ,SAASC,WACb,OACQ,MAATA,MACS,MAATA,EACCJ,EAAM1B,QAAU0B,IAAUI,MACpBJ,EAAQC,EAAQD,IAChBzB,GAAS,CAAE8B,EAAGJ,KACdA,EAAQ,UAKRG,aAKNJ,EAAM1B,SAAyC,IAA/Bf,EAAYoB,QAAQyB,cAEpCJ,EAAM1B,QAAmB,MAAT8B,KACZA,iBAGJJ,EAAM1B,QAAmB,MAAT8B,KACZA,iBAGJJ,EAAM1B,QAAmB,MAAT8B,EAEN,IAAVN,KACMM,KAIA7B,GAAS,CAAE+B,EAAGP,KACf,sBAKLC,EAAM1B,UACC8B,KAEDA,KAKTR,GA9EHW,EAAO,CAAEhB,EAAG,aACLY,QAAQ,SAASK,MACtBA,EAAEF,MACqB,GAArBE,EAAEF,EAAE3B,QAAQ,OACTY,EAAEX,KAAK,CAAEY,EAAGgB,EAAEF,EAAGb,EAAG,UACpB,KAEHD,EADEiB,EAAcvB,EAASsB,EAAEF,OAExBd,KAAKiB,IACHlB,EAAEX,KAAK6B,EAAYjB,GAAG,SAS9BD,EAAEX,KAAK,CAAEY,EAAGE,EAAE,GAAID,EAAG,IAAKF,EAAGgB,EAAKhB,IAEhCD,EA8DFJ,CAASD,GAAMM,EAAE,IAAM,SCvL5BmB,EACAC,EACAC,ECVEC,EAAO,SAEF,cAGG,cAGA,YAGF,iBAiBK3C,YAEJT,qBAGS,CAAC,KAAM,gBAKhB,KACJ,cACC,iBACA,oBACA,eACA,cACA,YACD,cACC,eACA,aACC,UACD,YACD,YACA,YACA,iBACC,yBAGQ,MACN,iBACC,iBACA,yBAGI,iBAGF,UAGJ,SAASqD,EAASC,EAAIC,OAGvBC,EAAgBD,EAAQE,wBAAwBF,EAAQG,OAAQ,QACjEC,iBAAKN,oBAAgBG,GAAeD,EAAQK,KAAKC,OAAQP,sBAKhD,SAASQ,EAAI3D,MACd,MAATA,EAAe,KACbD,EAAO6D,KAAK7D,KACQ,MAArBA,EAAK8D,OAAO,EAAE,OAAoB9D,EAAK8D,OAAO,MAC9CC,aAAa/D,EAAMC,UAEnB+D,gBAAgBH,KAAK7D,iBAKjB,SAASiE,cACbA,UAGEC,KAAKD,GAASzB,QAAQ,gBACvBvC,EAAQgE,EAAQE,IAEc,EAA9BzE,EAAWsB,QAAQmD,UACdD,KAAKjE,GAAOuC,QAAQ,cACpB2B,GAAQC,GAAOnE,EAAMmE,OAGvBD,GAAUlE,YAKd,ID1GT,SAASoE,EAASC,SACM,iBAARA,GAA4B,OAARA,EAapC,SAASC,EAASD,EAAKE,EAASC,QACzBD,QAAUA,OACVC,SAAWA,OACXC,WAAa,QACbC,aACAL,IAAMT,KAAKe,cAAcN,GAE1BD,EAASR,KAAKgB,OAAShB,KAAKiB,iBACzBC,KAAI,EAAMlB,KAAKO,IAAKP,KAAKgB,OAAQhB,KAAKY,UAI/CF,EAASS,cAAgB,SAASf,KACrBA,EAAQlB,WACNkC,OAAOf,KAAKnB,KACTkB,EAAQhB,eAK1BsB,EAASW,SAAW,SAASV,EAAS7C,OAGhCf,EAAOuE,EAFPzE,EAAS,GACT0E,EAAU,CAACC,EAAG1D,EAAM2D,KAAM,QAGzB1E,EAAQ,EAAGA,EAAQ4D,EAAQ7D,OAAQC,MAChC4D,EAAQe,OAAO3E,IAEdoC,EAAWhC,QAAQmE,MACjBlE,KAAKmE,KACF,CAACC,EAAGF,EAAKG,KAAM,OAEjBA,MAAQH,WAIblE,KAAKmE,GACL1E,GAKT6D,EAASiB,UAAUb,MAAQ,eACrBW,EAAM3D,EAELqB,EAAWrC,QAtDlB,SAAe8E,SACP,IAAIC,MAAM,cAAgBD,IAsDxB,kDAGDzC,EAAWhC,QAAQ6C,KAAKW,QAAQ,OAC9BX,KAAKW,QAAQ,GACbX,KAAKW,QAAQV,OAAO,OAEpBb,EACAY,KAAKW,cAGT9D,OAAS6D,EAASW,SAASI,EAAM3D,QACjCyC,IAAMP,KAAKnD,OAAOiF,OAKzBpB,EAASiB,UAAUV,QAAU,mBAGvBc,EACAC,EAHAT,EAAUvB,KAAKS,IACfwB,GAAa,EAIRlF,EAAQ,EAAGA,EAAQiD,KAAKnD,OAAOC,OAAQC,MACtCiD,KAAKnD,OAAOE,GAChByD,EAASe,SAC2B,IAA3BvB,KAAKa,WAAW9D,GACrBwE,KAAaQ,EAAO/B,KAAKa,WAAW9D,WACjCmE,KAAI,EAAOc,EAAOD,EAAM/B,WACxBkB,KAAI,EAAMc,EAAOT,EAASvB,WAC1Ba,WAAW9D,GAASwE,SAGtBL,KAAI,EAAMc,EAAOT,EAASvB,WAC1Ba,WAAW9D,GAASwE,KAGjBvB,KAAKkC,IAAIF,EAAOT,MAEP,IAAfU,MACUlF,IAGVgF,EAAO/B,KAAKa,WAAW9D,UACpBmE,KAAI,EAAOc,EAAOD,EAAM/B,cAKhB,IAAfiC,QACGpB,WAAWsB,OAAOF,GAGlBV,GAITb,EAASiB,UAAUS,KAAO,eACpBC,EAAMC,EAAUC,GAEfF,EAAOrC,KAAKiB,aAAejB,KAAKgB,QAC/BR,EAASR,KAAKgB,cACXE,KAAI,EAAOlB,KAAKO,IAAKP,KAAKgB,OAAQhB,KAAKY,UAG1CJ,EAAS6B,SACNnB,KAAI,EAAMlB,KAAKO,IAAK8B,EAAMrC,KAAKY,YAG3BZ,KAAK5D,aACX4E,OAASqB,MACHrC,KAAK5D,WACCkG,GAAYC,aAAoBC,WAAUxC,KAAKY,SAASwB,QAChEC,aAAgBI,YACpB7B,SAASwB,QAMlB1B,EAASiB,UAAUvF,MAAQ,cACrBoE,EAASR,KAAKgB,eACThB,KAAKkC,IAAIlC,KAAKO,IAAKP,KAAKgB,SAMnCN,EAASiB,UAAUe,SAAW,SAAStG,GACjCoE,EAASR,KAAKgB,WACPhB,KAAKO,IAAIiB,GAAGN,IAAIlB,KAAKgB,OAAQhB,KAAKO,IAAIkB,KAAMrF,IAKzDsE,EAASiB,UAAUO,IAAM,SAAS3B,EAAKE,UAC9BvB,EAASqB,EAAIiB,GAAGU,IAAIzB,EAAKF,EAAIkB,OAItCf,EAASiB,UAAUT,IAAM,SAASyB,EAAQpC,EAAKE,EAAKG,OAC9CgC,EAASD,EAAS,UAAY,cACzBpC,EAAIiB,GAAGoB,GAAQnC,EAAKF,EAAIkB,KAAMb,IAKzCF,EAASiB,UAAUkB,UAAY,mBACzBpC,EACAuB,EAEKjF,EAAQ,EAAGA,EAAQiD,KAAKnD,OAAOC,OAAQC,MACtCiD,KAAKnD,OAAOE,IAChB0D,EAAMT,KAAKa,WAAW9D,UACnBmE,KAAI,EAAOc,EAAOvB,EAAKT,MAI5BQ,EAASR,KAAKgB,cACXE,KAAI,EAAOlB,KAAKO,IAAKP,KAAKgB,OAAQhB,KAAKY,WAKhDF,EAASiB,UAAUZ,cAAgB,SAAUN,OACvCqC,EAAUvB,MACTd,EAAIsC,eACAtC,QAGLT,KAAKnD,OAAOC,OACHkD,KAAKnD,OAAO,GAAG4E,KAEfzB,KAAKO,IAAIkB,OAGZhB,EACHc,EAAQwB,cAAkCxG,IAAtBgF,EAAQuB,MACvBvB,EAAQwB,eAGbxB,sGEtLT,IAAMyB,EAAiB,6CACjBC,EAAkB,MAClBC,EAAW,SAGJC,wBAICtD,EAAME,EAAI5D,EAAMwE,EAASyC,EAAQC,EAAKC,kBAC3CzD,KAAOA,OACPE,GAAKA,OACL5D,KAAOA,OACPwE,QAAUA,OACVyC,OAASA,OACTC,IAAMA,OACNC,WAAaA,OACbC,mBAAqB,QACrBC,WAAQjH,OAGRoD,OAAS,QAET8D,YAAc,QAEdC,QAAS,OAETC,UAAY,sBAInBC,iBAAQnD,EAAKE,UACJ,IAAID,EAASD,EAAKE,EAASX,mBAGpC6D,0BACM7D,KAAKW,QAAS,KACZqB,EAAQ/F,EAAU+D,KAAKW,YAER,IAAfqB,EAAM7F,UACHC,MAAQ4F,EAAM5F,UACd,IACD8G,EAAS7G,KAAK2D,KAAKW,SAAU,KAC3BmD,EAAStG,EAAYwC,KAAKW,SAC1BmD,SACGnD,QAAUmD,EAAO9F,OACjB2B,OAASmE,EAAO/F,EAAEgG,IAAI,mBAAKC,EAAEhG,UAKjCiG,SAAWjE,KAAK4D,QAAQ5D,KAAKH,KAAKC,OAAQE,KAAKW,cAC/C6C,MAAQxD,KAAKiE,SAASjD,kBAGxB5E,WAAQG,eAIjBmD,iCAAwBwE,EAAMC,qBACrBD,EAAKH,IAAI9H,GAAW8H,IAAI,WAAkBK,OAAfjI,IAAAA,KAAMC,IAAAA,SACzB,IAATD,SACKC,EAEFiI,EAAKd,mBAAmBY,OACtBZ,mBAAmBY,GAAkB,QAGxCF,EAAWI,EAAKd,mBAAmBY,GAAgBC,UAElDH,MACQI,EAAKT,QAAQS,EAAKxE,KAAKC,OAAQ1D,KACrCmH,mBAAmBY,GAAgBC,GAAMH,GAGzCA,EAAS7H,uBAOtBkI,wBAAelI,qBACN4D,KAAKsD,WAAWiB,OAAO,SAACC,EAAQC,EAAa1H,OAC9CmH,EAAOO,EAAYjG,MAAMwE,GACzB0B,EAAKR,EAAKS,QACVC,EAAYC,EAAKhF,KAAKO,QAAQkD,WAAWoB,GAEvCjF,EAAgBoF,EAAKnF,wBAAwBwE,EAAMnH,UAErD6H,GAAaA,EAAUE,gBAAgBtC,WAChCoC,EAAUE,cAAKN,UAAW/E,IAC1BmF,aAAqBpC,aACrBoC,gBAAUJ,UAAW/E,KAEzB+E,GACNpI,gBAIL2I,sBAAaC,OACPxF,EAAUQ,KACViF,EAAUzF,EAAQK,KAAKO,QAAQ6E,eAE5B,SAAS1F,KACNK,KAAKoF,EAAIhF,KAAMT,EAAIC,iBAM/B0B,aAAI9E,MACEA,aAAiBoG,WAAaxC,KAAKoD,OAAO8B,SAAU,OAEhDzF,EAAgBO,KAAKN,wBAAwBM,KAAKL,OAAQ,KACxDK,KAAKsE,qBACL1E,cAAKI,KAAKwD,wBAAc/D,GAAeO,KAAKH,KAAKC,mBAIjDE,KAAKsE,eAAelI,OAG1B+I,EAAYnF,KAAKoD,OAAOgC,SAAWpF,KAAKoD,OAExC+B,aAAqB3C,aACb5C,KAAKI,KAAMA,KAAKD,GAAI3D,QACzBiJ,gBAAgBjJ,iBAKzBgG,gBACMpC,KAAKiE,eACFT,MAAQxD,KAAKiE,SAASjD,YACtBE,IAAIlB,KAAKiE,SAAS7H,eAElB8E,IAAIlB,KAAK5D,oBAKlBkJ,iCACMtF,KAAKiE,SAAU,KACb7H,EAAQ4D,KAAKsD,WAAWiC,YAAY,SAACf,EAAQC,EAAa1H,OACtDmH,EAAOO,EAAYzI,MAAMiH,GACzByB,EAAKR,EAAKS,QACVC,EAAYY,EAAK3F,KAAKO,QAAQkD,WAAWoB,GACzCjF,EAAgB+F,EAAK9F,wBAAwBwE,EAAMnH,UAErD6H,GAAaA,EAAUU,YAChBV,EAAUU,iBAAQd,UAAW/E,KAEjC+E,GACNxE,KAAKyF,SAASzF,KAAKD,UAEjBkE,SAASvB,SAAStG,iBAO3BsJ,qBACO7B,cAED7D,KAAKoD,OAAOuC,eAAe,cACxBvC,OAAOsC,KAAK9F,KAAKI,KAAMA,KAAKD,IAG/BC,KAAKH,KAAKO,QAAQwF,kBACfxD,oBAKTyD,6BACM7F,KAAKoD,OAAOyC,aACTzC,OAAOyC,OAAOjG,KAAKI,KAAMA,KAAKD,IAGjCC,KAAKiE,eACFA,SAASpB,mBAGTxC,KAAKL,KAAKuD,oBAAoB5E,QAAQ,gBACvCuF,EAAO4B,EAAKvC,mBAAmBwC,UAE5B1F,KAAK6D,GAAMvF,QAAQ,cACnByF,GAAIvB,qBAIRU,mBAAqB,gBAK5ByC,sBAAOlG,yDAAS,GACVE,KAAKiE,gBACFT,MAAQxD,KAAKiE,SAASjD,QAGzBhB,KAAKoD,OAAO4C,aACT5C,OAAO4C,OAAOpG,KAAKI,KAAMF,gBAKlC2F,kBAAS1F,UACHC,KAAKoD,QAAUpD,KAAKoD,OAAOqC,SACtBzF,KAAKoD,OAAOqC,SAAS7F,KAAKI,KAAMD,IAnOvC3B,EAAU,GACE,cAFK2B,EAsOIA,GApOlB5D,KACE4D,EAAGkG,QACW,oBAAZlG,EAAG5D,QACTiE,QAAQzB,QAAQ,YACb2B,EAAO4F,YACD9I,KAAKkD,EAAOlE,SAIjBgC,GAEA2B,EAAG3D,OAbd,IAAuB2D,EACjB3B,eA0OJ+H,mBAAUC,OACJrJ,EAAQiD,KAAKyD,YAAYrG,KAAKgJ,GAAW,QAGtC,QACG,kBACCpG,KAAKyD,YAAY1G,kBAM9BsI,yBAAgBjJ,QAEPqH,YAAY9E,QAAQ,SAAS0H,KAC3BjK,kBAKXkK,cAAKC,eAEYhK,IAAZgK,EACMvG,KAAK0D,SACa,IAAhB1D,KAAK0D,SAA+B,IAAZ6C,KAK5BvG,KAAK0D,OAAS6C,gBAIvBC,kCACSxG,KAAKH,KAAK4G,SAASC,OAAO,SAAC1C,UAAaA,EAAEjE,KAAO4G,EAAK5G,kBAG/D6G,aAAIzK,OACE0K,EAAaxH,EAAKyH,UAAU3K,IAASA,SAElC6D,KAAKwG,OAAOO,KAAK,SAAC/C,UAAaA,EAAE7H,OAAS0K,UClR/CG,EAAa,SACR,SAACjI,EAAM3C,KACT6K,KAAiB,MAAT7K,EAAiBA,EAAQ,KAIpC8K,EAAoB,+DAGpBC,EAAiB,eAAenL,MAAM,IAGtCoL,EAAY,SAAZA,EAAavH,EAAMd,OACnBsI,GAAQ,KAEU,IAAlBtI,EAAKuI,SAAgB,KACnBzK,EAASH,EAAcqC,EAAKkI,KAAM5H,EAAKkI,uBAEvC1K,EAAQ,KACL,IAAI2E,EAAI,EAAGA,EAAI3E,EAAOC,OAAQ0E,IAAK,KAClCQ,EAAQnF,EAAO2E,GACfgG,EAAOC,SAASC,eAAe1F,EAAM5F,SACpCuL,WAAWC,aAAaJ,EAAMzI,GAEhB,IAAfiD,EAAM7F,QACH0L,aAAaL,EAAM,KAAMxF,EAAM5F,MAAO4K,EAAY,QAItDW,WAAWG,YAAY/I,MAEtB,OACmB,IAAlBA,EAAKuI,aACNzH,EAAKkI,SAAShJ,QAGnBsI,MACE,IAAI7F,EAAI,EAAGA,EAAIzC,EAAKiJ,WAAWlL,OAAQ0E,MAChC3B,EAAMd,EAAKiJ,WAAWxG,KAKhCyG,EAAoB,SAACC,EAAGC,OACxBC,EAAYF,EAAE9E,QAAU8E,EAAE9E,OAAOiF,UAAiB,SACtCF,EAAE/E,QAAU+E,EAAE/E,OAAOiF,UAAiB,GACnCD,GAGfE,EAAU,SAACC,UACRA,EAAIhL,QAIQiL,wBAIPC,EAAK3I,EAAQM,aACnBqI,EAAIC,QAAUD,aAAehG,WAC1BgG,IAAMA,OAENA,IAAM,CAACA,QAGT3I,OAASA,OACTM,QAAUA,OAEVuI,2BAIPd,sBAAa9I,EAAM5C,EAAMsI,EAAarB,EAAQC,OACxCuF,EAAQnE,EAAYjG,MAAM0I,GAAmBnD,IAAIuE,GAEjD3H,EAAUiI,EAAMjE,WAET,KAARtB,GAAuB,MAATlH,EAAa,KAGxB0M,EADU,IAAIhL,OAAO,kCACNM,KAAKwC,GAErBkI,GAA0B,EAAhBA,EAAO/L,WACZ+L,EAAO,IAAMxF,IACTwF,EAAO,IAAMlI,QAKtB8F,SAASrJ,KAAK,IAAI+F,EAAQnD,KAAMjB,EAAM5C,EAAMwE,EAASyC,EAAQC,EAAKuF,iBAKzED,sBACOlC,SAAW,OAEYqC,EAAxBC,EAAW/I,KAAKyI,IAAKjH,aACpBA,EAAI,EAAGsH,EAAMC,EAASjM,OAAQ0E,EAAIsH,EAAKtH,MAChCxB,KAAM+I,EAASvH,SAGtBiF,SAASuC,KAAKf,gBAGrBF,kBAAShJ,WAOHkK,EAAY7F,EAAQ8F,EAAY7F,EALhCgE,EAA0B,WAAlBtI,EAAKoK,UAA2C,UAAlBpK,EAAKoK,SAC3CC,EAAarK,EAAKqK,WAClBC,EAAY,GACZC,EAAatJ,KAAKI,QAAQkJ,WAIrB9H,EAAI,EAAGsH,EAAMM,EAAWtM,OAAQ0E,EAAIsH,EAAKtH,IAAK,KACjD+H,EAAYH,EAAW5H,MAEvBxB,KAAKwJ,gBAAgBD,EAAUE,MAAO,MAEvBpK,EAAKyH,UAAUyC,EAAUE,OACXF,EAAUE,YAInClN,MADGyD,KAAKI,QAAQsJ,QAAQT,QAIvB,IAAIjL,EAAI,EAAGA,EAAIsL,EAAWxM,OAAQkB,SACxBsL,EAAWtL,GACpBiL,EAAW3M,MAAM,EAAG4M,EAAWpM,OAAS,KAAOoM,EAAW5M,MAAM,GAAI,GAAI,GACjE0D,KAAKI,QAAQsJ,QAAQR,KACxBD,EAAW3M,MAAM4M,EAAWpM,OAAS,YAM5CsG,MACM/D,EAAKsK,gBAGZvG,EAAOiE,kBACJQ,aAAa9I,EAAMkK,EAAYM,EAAUnN,MAAOgH,EAAQC,KACxDlD,gBAAgBoJ,EAAUE,OACxB,IAGCrM,KAAK,CAACwM,KAAML,EAAWnG,OAAQA,EAAQjH,KAAM8M,EAAY5F,IAAKA,SAIvE,IAAI7B,EAAI,EAAGA,EAAI6H,EAAUvM,OAAQ0E,IAAK,KACrCqI,EAAWR,EAAU7H,QACpBqG,aAAa9I,EAAM8K,EAAS1N,KAAM0N,EAASD,KAAKxN,MAAOyN,EAASzG,OAAQyG,EAASxG,OACjFlD,gBAAgB0J,EAASD,KAAKH,aAGjCpK,EAAKyK,WAAWb,KAAgBlK,EAAKgL,cACjCtD,SAASrJ,KAAK,IAAI4M,iBAAiBhK,KAAMjB,EAAMkK,OAC5C,GAGJ5B,eAIT3B,qBACOe,SAAS9H,QAAQ,cACZ+G,sBAKZG,uBACOY,SAAS9H,QAAQ,cACZkH,wBAKZzD,qBACOqE,SAAS9H,QAAQ,cACZyD,sBAKZkD,wBACOmB,SAAS9H,QAAQ,YAChBa,EAAQ4D,QAAU5D,EAAQ4D,OAAO6G,aAC3B3E,yBAMdU,6BAAOlG,yDAAS,UACPO,KAAKP,GAAQnB,QAAQ,cACrBmB,OAAOS,GAAOT,EAAOS,UAGvBkG,SAAS9H,QAAQ,YAChBa,EAAQwG,UACFA,OAAOlG,kBAMrB0J,yBAAgBC,OACRS,EAAST,EAAKxJ,OAAO,EAAG,UACvBkH,EAAegD,KAAK,SAACC,UAAQA,IAAQF,UCpN1CG,EAAgB,CACpB,OACA,MACA,QACA,UACA,OACA,UACA,UAGIC,EAAU,SACL,UACA,iBAEM,SAAS7J,OACjBA,EAAIkF,eAAe,QAAS,KAC3BjB,EAAK1E,KAAKuK,iBAEPC,eAAe/J,EAAK,OAAQ,OAC1BiE,WAIN1E,KAAKyK,QAAQhK,EAAIiK,aACfD,QAAQhK,EAAIiK,MAAQ,WACZ,KAIR1K,KAAKyK,QAAQhK,EAAIiK,4BAGJ,SAASC,EAAKjG,GAC7BtD,OAAOf,KAAKsK,EAAIC,WAAW9N,QACxB6N,EAAIE,UAAYzJ,OAAOf,KAAKsK,EAAIE,UAAU/N,eACvCkD,KAAKyK,QAAQ/F,iBAKZ,SAASjE,EAAKuE,OACtB8F,EAAWrK,EAAIuE,GACfjB,EAAM/D,KAAK+K,cAActK,GACzBgK,EAAUzK,KAAKyK,UAEfzF,GAAM,sCAAId,6CACR8G,EAAWF,EAASG,MAAMxK,EAAKyD,iBAE5B7D,KAAK0D,EAAI8G,UAAUlM,QAAQ,gBAC5BX,EAAI+F,EAAI8G,SAAS3M,GAEjBuM,EAAQvM,IACNuM,EAAQvM,GAAG0M,UAAU5M,aAAcyE,SAC7BvE,GAAG0M,UAAU5M,GAAGW,QAAQ,cACrByD,WAMV4I,qBAIO,SAASvK,EAAKkK,EAAKhK,iBAC/BF,aAAegC,MAAO,KACpBsB,EAAM/D,KAAK+K,cAActK,GAExBsD,EAAI8G,aACHA,SAAW,KAEDlM,QAAQ,cACfuM,aAAazK,EAAKuE,MAItBjB,EAAI8G,SAASF,OACZE,SAASF,GAAO,KAGsB,IAAxC5G,EAAI8G,SAASF,GAAKxN,QAAQwD,MACxBkK,SAASF,GAAKvN,KAAKuD,wBAKT,SAASF,EAAKkK,EAAKhK,MAChCF,aAAegC,OAAuB,MAAZhC,EAAIiK,KAAe,KAC5C3G,EAAM/D,KAAKyK,QAAQhK,EAAIiK,SAEvB3G,EAAK,KACH8G,EAAW9G,EAAI8G,SAASF,MAExBE,EAAU,KACRM,EAAMN,EAAS1N,QAAQwD,IAEhB,EAAPwK,KACOhJ,OAAOgJ,EAAK,GAGlBN,EAAS/N,eACLiH,EAAI8G,SAASF,QAGjBS,qBAAqBrH,EAAKtD,EAAIiK,kBAMlC,SAASjK,EAAKE,EAASC,OAC1BxE,SACAwO,EAAY5K,KAAK+K,cAActK,GAAKmK,cAEnCA,EAAUjK,GAAU,GACbA,GAAW,OACjB0K,EAAOjK,OAAOkK,yBAAyB7K,EAAKE,GAE3C0K,IAAUA,EAAKnJ,KAAOmJ,EAAKnK,MAAQmK,EAAKE,kBACnC9K,EAAIE,UAEL6J,eAAe/J,EAAKE,EAAS,aACtB,MAEP,kBACIvE,OAGJ,eACCmG,IAAanG,EAAO,GACjBoP,mBAAmBpP,EAAOqE,EAAIiK,KAAM/J,KACjC4B,MACJwB,EAAMc,EAAK4F,QAAQhK,EAAIiK,SAEvB3G,EAAK,KACH6G,EAAY7G,EAAI6G,UAAUjK,GAE1BiK,KACQjM,QAAQ,cACXyD,WAIJqJ,iBAAiBlJ,EAAU9B,EAAIiK,KAAM/J,UAQR,IAA1CiK,EAAUjK,GAASxD,QAAQyD,MACnBD,GAASvD,KAAKwD,QAGrB6K,iBAAiBhL,EAAIE,GAAUF,EAAIiK,KAAM/J,cAGrC,SAASF,EAAKE,EAASC,OAC5BmD,EAAM/D,KAAKyK,QAAQhK,EAAIiK,SAEvB3G,EAAK,KACH6G,EAAY7G,EAAI6G,UAAUjK,MAE1BiK,EAAW,KACTO,EAAMP,EAAUzN,QAAQyD,IAEjB,EAAPuK,MACQhJ,OAAOgJ,EAAK,GAEjBP,EAAU9N,gBACNiH,EAAI6G,UAAUjK,QAChB6K,mBAAmB/K,EAAIE,GAAUF,EAAIiK,KAAM/J,UAI/CyK,qBAAqBrH,EAAKtD,EAAIiK,aAKpC,SAASjK,EAAKE,UACVF,EAAIE,QAGR,SAACF,EAAKE,EAASvE,KACduE,GAAWvE,IC3LbsP,EAAY,SAACtP,UACD,MAATA,EAAgBA,EAAMuP,gBAAapP,GAO5C,SAASqP,EAAWpM,EAASyH,EAAM4E,OAC7BlP,EAAW6C,EAAQO,GAAG+L,WAAU,GAChCjM,EAAO,IAAI2I,EAAK7L,EAAUsK,EAAMzH,EAAQK,KAAKO,kBAC5CsF,SACGqG,OAAOpE,WAAWC,aAAajL,EAAUkP,GAC1ChM,EAGT,IAAM6J,EAAU,MAER,WACM,WACA,WAEF,SAAS3J,GACXC,KAAKiF,WACJ+G,oBAAoBhM,KAAKqD,IAAKrD,KAAKiF,kBAIjC,SAASlF,EAAI3D,GAChB4D,KAAKiF,WACJ+G,oBAAoBhM,KAAKqD,IAAKrD,KAAKiF,cAGnCA,QAAUjF,KAAK+E,aAAa3I,KAC9B6P,iBAAiBjM,KAAKqD,IAAKrD,KAAKiF,gBAKjC,QACG,WAEG,SAEJ,SAASlF,GACRC,KAAK+L,YAOHG,SAASvN,QAAQ,cACf+G,eAPFqG,OAAStE,SAAS0E,wBAAwBnM,KAAK7D,eAC/C+P,SAAW,KAEbvE,WAAWC,aAAa5H,KAAK+L,OAAQhM,KACrC4H,WAAWG,YAAY/H,YAQtB,SAASA,GACXC,KAAKkM,eACFA,SAASvN,QAAQ,cACfkH,oBAKF,SAAS9F,EAAIqM,cAChBC,EAAYrM,KAAKqD,KAAO,UACf+I,GAAc,OACvBE,EAAYvM,EAAGwM,aAAa,WAAaxM,EAAGwM,aAAa,mBAAqB,WAEvE5N,QAAQ,SAAC6E,EAAOzG,OACrBkK,EAAO,CAAClE,QAASsB,EAAKxE,KAAKC,UAC1BwM,GAAavP,IACbsP,GAAa7I,MACd3D,EAAOwE,EAAK6H,SAASnP,MAEpB8C,KAWCA,EAAKC,OAAOuM,KAAe7I,EAAO,SAEhCgJ,SAAYC,SACPC,EAAY3P,EAAQ,EAAG2P,EAAYrI,EAAK6H,SAASpP,OAAQ4P,UACrDrI,EAAK6H,SAASQ,IACZ5M,OAAOuM,KAAe7I,EAAO,GAC3BkJ,aAIEnQ,IAAfiQ,KAIGN,SAAS/J,OAAOqK,EAAY,KAC5BT,OAAOpE,WAAWC,aAAa6E,EAAShE,IAAI,GAAI5I,EAAK4I,IAAI,MACrD3I,OAAOwM,GAAavP,KAGlB6O,EAAWvH,EAAM4C,EAAMpH,EAAK4I,IAAI,MAExCyD,SAAS/J,OAAOpF,EAAO,EAAG0P,UAE1B3M,OAAOwM,GAAavP,MAlClB,KAEL4P,EAAWtI,EAAK0H,OAEhB1H,EAAK6H,SAASpP,WACLuH,EAAK6H,SAAS7H,EAAK6H,SAASpP,OAAS,GAAG2L,IAAI,MAGlDmD,EAAWvH,EAAM4C,EAAM0F,EAASC,eAClCV,SAAS9O,KAAKyC,MA8BnBG,KAAKkM,SAASpP,OAASsP,EAAWtP,QAhH9B,SAAC+P,EAAGC,OACX,IAAItL,EAAI,EAAGA,EAAIqL,EAAGrL,SAgHXxB,KAAKkM,SAASpP,OAASsP,EAAWtP,OAAQ,eAC1C+C,EAAOwE,EAAK6H,SAASpK,QACpB+D,WACAkG,OAAOpE,WAAWG,YAAYjI,EAAK4I,IAAI,MAI5B,WAAhB1I,EAAGoJ,eACAtJ,KAAK4G,SAAS9H,QAAQ,YACrBa,EAAQO,KAAOsE,EAAK0H,OAAOpE,YAA+B,UAAjBnI,EAAQrD,QAC3CiG,iBAMR,SAAStC,cACXmH,EAAO,UAGJ5G,KAAKP,GAAQnB,QAAQ,YACtB4B,IAAQsE,EAAKxB,QACV9C,GAAOT,EAAOS,WAIlB2L,SAASvN,QAAQ,cACfqH,OAAOiB,aAMX,SAASlH,EAAI3D,OACZ2Q,EAAe/M,KAAKqD,MAErB2J,MAAMD,GADP3Q,GAGuB,SAKvB,SAAS2D,EAAI3D,OACb6Q,MAAclN,EAAGmN,eAEhB9Q,IAA+C,EAApC6Q,EAAQ9P,YAAY6C,KAAKqD,aAElC6J,UADD9Q,EACgB2D,EAAGmN,cAAalN,KAAKqD,IAExB4J,EAAQE,YAAYnN,KAAKqD,QAAQ,KAAK9F,iBAMlD,SAACwC,EAAI3D,KACTgR,YAAuB,MAAThR,EAAgBA,EAAQ,YAIlC,SAAC2D,EAAI3D,KACTiR,UAAqB,MAATjR,EAAgBA,EAAQ,YAIhC,SAAC2D,EAAI3D,KACT4Q,MAAMM,QAAUlR,EAAQ,GAAK,gBAIzB,SAAC2D,EAAI3D,KACT4Q,MAAMM,QAAUlR,EAAQ,OAAS,eAI1B,SAAC2D,EAAI3D,KACZmR,UAAYnR,eAIJ,SAAC2D,EAAI3D,KACbmR,WAAanR,cAKN,YACC,WACD,SAEJ,SAAS2D,OACTyN,EAAOxN,KACNA,KAAKY,gBACHA,SAAW,aACT0E,cAGN2G,iBAAiB,SAAUjM,KAAKY,kBAG7B,SAASb,KACZiM,oBAAoB,SAAUhM,KAAKY,mBAG/B,SAASb,EAAI3D,GACJ,UAAZ2D,EAAG5D,OACF8J,QAAUyF,EAAU3L,EAAG3D,SAAWsP,EAAUtP,KAE5C6J,UAAY7J,aAOX,YACG,WACD,SAEJ,SAAS2D,WACR0N,QAAyB,UAAf1N,EAAG2N,SAAmC,UAAZ3N,EAAG5D,MACvC6D,KAAKyN,QAAS,MACZE,MAAQ5N,EAAGwM,aAAa,gBAAiC,WAAfxM,EAAG2N,QAAuB,SAAW,aAEhFF,EAAOxN,KACNA,KAAKY,gBACHA,SAAW,aACT0E,cAIN2G,iBAAiBjM,KAAK2N,MAAO3N,KAAKY,mBAIjC,SAASb,GACVC,KAAKyN,WACLzB,oBAAoBhM,KAAK2N,MAAO3N,KAAKY,mBAInC,SAASb,EAAI3D,MAChB4D,KAAKyN,UACJvN,aAAa,QAAS9D,WAET,oBAAZ2D,EAAG5D,SACDC,aAAiBqG,UACd,IAAIjB,EAAI,EAAGA,EAAIzB,EAAGjD,OAAQ0E,IAAK,KAC9BlB,EAASP,EAAGyB,KACT0E,UAA0C,EAA/B9J,EAAMe,QAAQmD,EAAOlE,aAGlCsP,EAAUtP,KAAWsP,EAAU3L,EAAG3D,WACxCA,MAAiB,MAATA,EAAgBA,EAAQ,UAOtC,QACI,WACG,SAEJ,SAAS2D,GACRC,KAAK+L,QAMgB,IAAf/L,KAAK4N,OAAmB5N,KAAK6N,aACjCA,OAAOnI,aANPqG,OAAStE,SAAS0E,cAAc,UAAYnM,KAAK7D,KAAO,IAAM6D,KAAKW,QAAU,UAC7EmN,UAAW,IAEbnG,WAAWC,aAAa5H,KAAK+L,OAAQhM,KACrC4H,WAAWG,YAAY/H,SAIvB6N,OAAQ,UAGP,WACF5N,KAAK6N,cACFA,OAAOhI,cACP+H,OAAQ,YAIR,SAAS7N,EAAI3D,KACdA,IAAU4D,KAAK8N,gBASZA,SARH1R,GAEG4D,KAAK6N,cACHA,OAAS,IAAIrF,EAAKzI,EAAIC,KAAKH,KAAKC,OAAQE,KAAKH,KAAKO,cAClDyN,OAAOnI,aAGTqG,OAAOpE,WAAWC,aAAa7H,EAAIC,KAAK+L,OAAOa,cACpC,MAEbjF,WAAWG,YAAY/H,IACV,YAKd,SAASD,GACXE,KAAK6N,aACFA,OAAO7H,OAAOlG,WAIlB,SAASC,EAAI3D,GACL,MAATA,IACC8D,aAAaF,KAAKqD,IAAKjH,KAEvB+D,gBAAgBH,KAAKqD,cCnU9BhE,EAAKqK,QAAUA,EAEfrK,EAAKH,SAAS,KAAOoL,EAIrBjL,EAAKqG,KAAO,SAACqI,EAAKjO,EAAQM,OAGpBL,KADEgO,GAAO,cACCzG,UAA2B,EAAfyG,EAAIzG,SAAgByG,EAAMtG,SAASuG,cAAcD,KAEtEE,YAAYlO,OAGbmO,EAAc,KACTpO,GAAU,KACTM,GAAW,KAEVzB,QAAQ,cACLwP,GAAiB/M,OAAOgN,OAAO,MAEvChO,EAAQ+N,WACH9N,KAAKD,EAAQ+N,IAAgBxP,QAAQ,cAC9BwP,GAAe5N,GAAOH,EAAQ+N,GAAe5N,YAItDF,KAAKhB,EAAK8O,IAAgBxP,QAAQ,YAClCuP,EAAYC,GAAe5N,OAClB4N,GAAe5N,GAAOlB,EAAK8O,GAAe5N,UAKpD5B,QAAQ,gBACVvC,EAAQgE,EAAQE,KACRA,GAAmB,MAATlE,EAAgBA,EAAQiD,EAAKiB,OAGzCgJ,WAAalI,OAAOf,KAAK6N,EAAYxE,SAAShD,OAAO,SAAUnG,UAC/C,EAAnBA,EAAIpD,QAAQ,SAGZgE,cAAc+M,OAEnBrO,EAAO,IAAI2I,EAAKzI,EAAID,EAAQoO,YAC3BxI,OACE7F,GAKTR,EAAKgP,KAAO,SAACC,EAAWvO,OAAIkH,yDAAO,GACvB,MAANlH,MAAmB0H,SAAS8G,cAAc,YAE1C5R,KADQ0C,EAAKyK,WAAWwE,IACH3R,SAASiD,KAAKP,EAAMU,MACzCpD,aAAoB6R,YAAa,MAC5BzO,EAAG0O,cACL3G,YAAY/H,EAAG0O,cAEjBC,YAAY/R,UAEZ0Q,UAAY1Q,MAEXgS,EAAQL,EAAUM,WAAWhP,KAAKP,EAAMU,EAAIkH,GAE9CpH,EAAO,IAAI2I,EAAKzI,EAAI4O,YACnBjJ,OACE7F,GAITR,EAAKiE,WAAWuL,OAASxP,EAAKiE,WAAWwL,IAAM,SAAC1S,UACtCA,GAGViD,EAAKiE,WAAW1D,KAAO,SAACxD,8BAAU8H,sDAC5BA,EAAKpH,YACLkI,EAAKd,EAAK,YACPzB,MAAMd,UAAUrF,MAAMsD,KAAKsE,EAAM,GAEjCc,EAAGpF,cAAKxD,UAAU8H,MAQ3B7E,EAAK0P,SAAW,SAAChP,EAAIiP,WAGbC,EAAQ,IAAIC,iBACVC,mBAAqB,WACF,GAAnBnP,KAAKoP,aACY,KAAfpP,KAAKqP,OAEW,WAAftP,EAAG2N,UAED4B,UAAYtP,KAAKuP,gBAIjBpP,gBAAgB,WAChBkN,UAAYrN,KAAKuP,eACftB,YAAYlO,IAGG,KAAfC,KAAKqP,SAAmBhC,UAAY,WAAUrN,KAAKwP,YAAc,uBACjEnC,UAAY,WAAUrN,KAAKuP,aAAe,cAGjDtS,KAAK,MAAO+R,GAAM,KAClBS,OACN,MAAO3Q,KACJuO,UAAY,+CAKnBhO,EAAK4O,YAAc,SAAClO,OACd2P,EAAGlO,SAAGmO,SAAOX,eAEbjP,EAAG6P,qBAAqB,KAEvBpO,EAAI,EAAGA,EAAIkO,EAAE5S,OAAQ0E,UAChBkO,EAAElO,IAEG+K,aAAa,aAEnBwC,SAASY,EAAOX"}